<%- include('partials/header') %>

<div class="row">
    <div class="col-12">
        <h1><%= title %></h1>
        <p class="lead">Reassl-time analytics and data visualization dashboard</p>
    </div>
</div>

<!-- KPI Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Total Sales</h5>
                        <h3 id="total-sales">$<%= data.kpis.totalSales.toLocaleString() %></h3>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-dollar-sign fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Active Users</h5>
                        <h3 id="active-users"><%= data.kpis.activeUsers.toLocaleString() %></h3>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-users fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Orders</h5>
                        <h3 id="total-orders"><%= data.kpis.totalOrders.toLocaleString() %></h3>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-shopping-cart fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Revenue Growth</h5>
                        <h3 id="revenue-growth"><%= data.kpis.revenueGrowth %>%</h3>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-chart-line fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row">
    <!-- Sales Trend Chart -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>Sales Trend (Last 6 Months)</h5>
            </div>
            <div class="card-body">
                <div id="sales-trend-chart" style="width: 100%; height: 300px;"></div>
            </div>
        </div>
    </div>
    
    <!-- Traffic Sources -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>Traffic Sources</h5>
            </div>
            <div class="card-body">
                <div id="traffic-sources-chart" style="width: 100%; height: 300px;"></div>
            </div>
        </div>
    </div>
</div>

<!-- Second Row Charts -->
<div class="row mt-4">
    <!-- Geographic Distribution -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Regional Performance</h5>
            </div>
            <div class="card-body">
                <div id="regional-chart" style="width: 100%; height: 250px;"></div>
            </div>
        </div>
    </div>
    
    <!-- Product Categories -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Product Categories</h5>
            </div>
            <div class="card-body">
                <div id="categories-chart" style="width: 100%; height: 250px;"></div>
            </div>
        </div>
    </div>
</div>

<script>
// Dashboard data from controller
const dashboardData = <%- JSON.stringify(data) %>;

// Initialize all dashboard charts
document.addEventListener('DOMContentLoaded', function() {
    initializeDashboard();
    
    // Update KPIs every 30 seconds (with slight variations for demo)
    setInterval(updateKPIs, 30000);
});

function initializeDashboard() {
    initSalesTrendChart();
    initTrafficSourcesChart();
    initRegionalChart();
    initCategoriesChart();
}

function initSalesTrendChart() {
    const chart = echarts.init(document.getElementById('sales-trend-chart'));
    
    const option = {
        title: { text: dashboardData.salesTrend.title },
        tooltip: { trigger: 'axis' },
        legend: { data: dashboardData.salesTrend.series.map(s => s.name) },
        grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },
        xAxis: {
            type: 'category',
            data: dashboardData.salesTrend.xAxis
        },
        yAxis: { type: 'value' },
        series: dashboardData.salesTrend.series.map(s => ({
            name: s.name,
            type: 'line',
            smooth: true,
            data: s.data,
            itemStyle: { color: s.name === 'Revenue' ? '#5470c6' : '#91cc75' }
        }))
    };
    
    chart.setOption(option);
    window.addEventListener('resize', () => chart.resize());
}

function initTrafficSourcesChart() {
    const chart = echarts.init(document.getElementById('traffic-sources-chart'));
    
    const option = {
        title: { text: dashboardData.trafficSources.title, left: 'center' },
        tooltip: { trigger: 'item' },
        series: [{
            name: 'Traffic Source',
            type: 'pie',
            radius: ['40%', '70%'],
            data: dashboardData.trafficSources.data,
            emphasis: {
                itemStyle: {
                    shadowBlur: 10,
                    shadowOffsetX: 0,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    };
    
    chart.setOption(option);
    window.addEventListener('resize', () => chart.resize());
}

function initRegionalChart() {
    const chart = echarts.init(document.getElementById('regional-chart'));
    
    const option = {
        title: { text: dashboardData.regionalPerformance.title },
        tooltip: {},
        xAxis: {
            type: 'category',
            data: dashboardData.regionalPerformance.regions,
            axisLabel: { interval: 0, rotate: 45 }
        },
        yAxis: { type: 'value' },
        series: [{
            data: dashboardData.regionalPerformance.data,
            type: 'bar',
            itemStyle: {
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    { offset: 0, color: '#83bff6' },
                    { offset: 0.5, color: '#188df0' },
                    { offset: 1, color: '#188df0' }
                ])
            }
        }]
    };
    
    chart.setOption(option);
    window.addEventListener('resize', () => chart.resize());
}

function initCategoriesChart() {
    const chart = echarts.init(document.getElementById('categories-chart'));
    
    const option = {
        title: { text: dashboardData.productCategories.title },
        tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },
        legend: { data: dashboardData.productCategories.series.map(s => s.name) },
        grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },
        xAxis: { type: 'value' },
        yAxis: {
            type: 'category',
            data: dashboardData.productCategories.categories
        },
        series: dashboardData.productCategories.series.map(s => ({
            name: s.name,
            type: 'bar',
            data: s.data
        }))
    };
    
    chart.setOption(option);
    window.addEventListener('resize', () => chart.resize());
}

function updateKPIs() {
    // Fetch updated KPI data from controller/model
    fetch('/data/kpis/updated')
        .then(response => response.json())
        .then(variations => {
            // Update KPI displays with animations
            animateNumber('total-sales', variations.totalSales, '$');
            animateNumber('active-users', variations.activeUsers);
            animateNumber('total-orders', variations.totalOrders);
            animateNumber('revenue-growth', variations.revenueGrowth.toFixed(1), '%');
        })
        .catch(error => {
            console.error('Error fetching updated KPIs:', error);
            // Fallback to local simulation if fetch fails
            const variations = {
                totalSales: dashboardData.kpis.totalSales + Math.floor(Math.random() * 5000) - 2500,
                activeUsers: dashboardData.kpis.activeUsers + Math.floor(Math.random() * 200) - 100,
                totalOrders: dashboardData.kpis.totalOrders + Math.floor(Math.random() * 50) - 25,
                revenueGrowth: dashboardData.kpis.revenueGrowth + (Math.random() * 2 - 1)
            };
            
            animateNumber('total-sales', variations.totalSales, '$');
            animateNumber('active-users', variations.activeUsers);
            animateNumber('total-orders', variations.totalOrders);
            animateNumber('revenue-growth', variations.revenueGrowth.toFixed(1), '%');
        });
}

function animateNumber(elementId, targetValue, prefix = '', suffix = '') {
    const element = document.getElementById(elementId);
    const currentValue = parseInt(element.textContent.replace(/[^0-9.-]/g, ''));
    const duration = 1000;
    const startTime = Date.now();
    
    function updateNumber() {
        const currentTime = Date.now();
        const progress = Math.min((currentTime - startTime) / duration, 1);
        
        const value = Math.floor(currentValue + (targetValue - currentValue) * progress);
        let displayValue = value.toLocaleString();
        
        if (prefix) displayValue = prefix + displayValue;
        if (suffix) displayValue = displayValue + suffix;
        
        element.textContent = displayValue;
        
        if (progress < 1) {
            requestAnimationFrame(updateNumber);
        }
    }
    
    updateNumber();
}
</script>

<%- include('partials/footer') %>