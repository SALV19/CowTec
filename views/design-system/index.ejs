<%# 
  ðŸŽ¨ COMPLETE DESIGN SYSTEM LOADER
  
  This file loads the complete design system hierarchy:
  Vendors â†’ Tokens â†’ Foundations â†’ Components
  
  Usage: Include this in your base template before any components
%>

<%# 1. VENDORS - Third-party dependencies %>
<%- include('vendors/external-libs') %>

<%# 2. DESIGN TOKENS - Core design values %>
<%- include('tokens/colors') %>
<%- include('tokens/spacing') %>
<%- include('tokens/typography') %>

<%# 3. FOUNDATIONS - Layout utilities and base classes %>
<%- include('foundations/layout') %>

<%# 4. GLOBAL STYLES - Application-wide customizations %>
<style>
/* Global Base Styles */
* {
  box-sizing: border-box;
}

html {
  font-size: 16px; /* Base font size for rem calculations */
}

body {
  margin: 0;
  font-family: var(--font-sans);
  font-size: var(--text-base);
  line-height: var(--leading-normal);
  color: var(--color-text-primary);
  background-color: var(--color-bg-secondary);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Smooth transitions for all interactive elements */
button, .btn, .nav-link, .card {
  transition: all 0.2s ease-in-out;
}

/* Focus states for accessibility */
button:focus,
.btn:focus,
input:focus,
select:focus,
textarea:focus {
  outline: 2px solid var(--color-primary-500);
  outline-offset: 2px;
}

/* Remove focus outline for mouse users */
button:focus:not(:focus-visible),
.btn:focus:not(:focus-visible) {
  outline: none;
}

/* Improved link styles */
a {
  color: var(--color-primary-500);
  text-decoration: none;
}

a:hover {
  color: var(--color-primary-600);
  text-decoration: underline;
}

/* Typography improvements */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-display);
  font-weight: var(--font-semibold);
  line-height: var(--leading-tight);
  margin-bottom: var(--spacing-md);
  color: var(--color-text-primary);
}

h1 { font-size: var(--text-4xl); }
h2 { font-size: var(--text-3xl); }
h3 { font-size: var(--text-2xl); }
h4 { font-size: var(--text-xl); }
h5 { font-size: var(--text-lg); }
h6 { font-size: var(--text-base); }

p {
  margin-bottom: var(--spacing-md);
  color: var(--color-text-secondary);
}

/* Code and pre elements */
code {
  font-family: var(--font-mono);
  font-size: var(--text-sm);
  background-color: var(--color-gray-100);
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
}

pre {
  font-family: var(--font-mono);
  background-color: var(--color-gray-100);
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  overflow-x: auto;
}

/* Scrollbar customization */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--color-gray-100);
}

::-webkit-scrollbar-thumb {
  background: var(--color-gray-400);
  border-radius: var(--radius-full);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--color-gray-500);
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
  
  body {
    background: white !important;
    color: black !important;
  }
  
  .card {
    box-shadow: none !important;
    border: 1px solid #ddd !important;
  }
}
</style>

<%# Design System Status Indicator (only in development) %>
<% if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') { %>
<style>
/* Development Mode Design System Indicator */
.design-system-indicator {
  position: fixed;
  bottom: var(--spacing-md);
  right: var(--spacing-md);
  background: var(--color-success-500);
  color: white;
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: var(--font-medium);
  z-index: 9999;
  box-shadow: var(--shadow-md);
}

.design-system-indicator:before {
  content: "ðŸŽ¨ ";
}
</style>

<div class="design-system-indicator no-print">
  Design System Loaded
</div>
<% } %>

<%# JavaScript utilities for working with design tokens %>
<script>
// Make design tokens available globally
window.DesignSystem = {
  tokens: window.DesignTokens || {},
  
  // Utility to get CSS custom property values
  getCSSVariable: function(property) {
    return getComputedStyle(document.documentElement)
      .getPropertyValue(property)
      .trim();
  },
  
  // Utility to set CSS custom property values
  setCSSVariable: function(property, value) {
    document.documentElement.style.setProperty(property, value);
  },
  
  // Get color palette
  getColor: function(color, shade = 500) {
    return this.getCSSVariable(`--color-${color}-${shade}`);
  },
  
  // Get spacing value
  getSpacing: function(size) {
    return this.getCSSVariable(`--spacing-${size}`);
  },
  
  // Initialize ECharts with design system theme
  createChart: function(containerId, options) {
    if (typeof window.initChart === 'function') {
      return window.initChart(containerId, options);
    } else {
      console.warn('ECharts not loaded or initChart function not available');
      return null;
    }
  }
};

// Export for module systems if available
if (typeof module !== 'undefined' && module.exports) {
  module.exports = window.DesignSystem;
}
</script>